---
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";


import Layout from "@layouts/Layout.astro";
import BlogPost from "@components/BlogPost.astro";

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async () => {
  const allPosts = await Astro.glob("../posts/*.md");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<Layout title={"Tag: " + tag + " - UniNote"}>
  <h1>Tag: {tag}</h1>
  <p>タグ {tag} が付いた記事</p>
  <menu>
    {
      posts
        .sort((a, b) => {
          return a.frontmatter.pubDate < b.frontmatter.pubDate ? 1 : -1;
        })
        .map((post) => <BlogPost post={post} />)
    }
  </menu>
</Layout>

<style>
  menu {
    display: contents;
  }
</style>
